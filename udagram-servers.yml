# .___  ___.      ___   .___________.___________. __    __   __   _______  __    __  
# |   \/   |     /   \  |           |           ||  |  |  | |  | |   ____||  |  |  | 
# |  \  /  |    /  ^  \ `---|  |----`---|  |----`|  |__|  | |  | |  |__   |  |  |  | 
# |  |\/|  |   /  /_\  \    |  |        |  |     |   __   | |  | |   __|  |  |  |  | 
# |  |  |  |  /  _____  \   |  |        |  |     |  |  |  | |  | |  |____ |  `--'  | 
# |__|  |__| /__/     \__\  |__|        |__|     |__|  |__| |__| |_______| \______/  

# 888     888 8888888b.        d8888  .d8888b.  8888888b.         d8888 888b     d888 
# 888     888 888  "Y88b      d88888 d88P  Y88b 888   Y88b       d88888 8888b   d8888 
# 888     888 888    888     d88P888 888    888 888    888      d88P888 88888b.d88888 
# 888     888 888    888    d88P 888 888        888   d88P     d88P 888 888Y88888P888 
# 888     888 888    888   d88P  888 888  88888 8888888P"     d88P  888 888 Y888P 888 
# 888     888 888    888  d88P   888 888    888 888 T88b     d88P   888 888  Y8P  888 
# Y88b. .d88P 888  .d88P d8888888888 Y88b  d88P 888  T88b   d8888888888 888   "   888 
#  "Y88888P"  8888888P" d88P     888  "Y8888P88 888   T88b d88P     888 888       888
                                                                     
#      _________    _  _   ___ ____    _____ ___     ___  _    ___  _ 
#   _ |___ |___ \  | || | / _ |___ \  |___  ( _ )   / _ \/ |  / _ \/ |
# _| |_ |_ \ __) | | || || (_) |__) |    / // _ \  | (_) | | | | | | |
#|_   ____) / __/  |__   _\__, / __/    / /| (_) |  \__, | | | |_| | |
#  |_||____|_____|    |_|   /_|_____|  /_/  \___/     /_/|_|  \___/|_|

Description: 'CloudFormation server cluster for Udagram'

######################################################################################
#                                                                                    #
#                                      PARAMETERS                                    #
#                                                                                    #
######################################################################################

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    ApachePort:
        Description: Port used by Apache
        Type: String
        Default: "80"

    AMIImage:
        Description: AMI used in Launch Configuration 
        Type: String

    InstanceType:
        Description: Instance type used in Launch Configuration
        Type: String

    DiskVolume:
        Description: Disk volume (in GB) used in Launch Configuration
        Type: String

    GroupMinSize:
        Description: Minimum amount of instances in Auto Scaling Group
        Type: String
        Default: "1"

    GroupMaxSize:
        Description: Maximum amount of instances in Auto Scaling Group
        Type: String
        Default: "1"

######################################################################################
#                                                                                    #
#                                      SERVERS                                       #
#                                                                                    #
######################################################################################

Resources:

# SERVER IAM ROLE

    UdagramIAMRole:
        Type: AWS::IAM::Role
        Properties: 
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                - Effect: allow
                  Principal:
                    Service:
                    - ec2.amazonaws.com
                  Action:
                  - 'sts:AssumeRole'
            Description: IAM Role to allow for Udagram to access s3 buckets
            Path: /
            Policies: 
                - PolicyName: Udagrams3Policy
                  PolicyDocument:
                    Version: '2012-10-17'
                    Statement:
                    - Effect: Allow
                      Action:
                      - s3:Get*
                      - s3:List*
                      Resource: "arn:aws:s3:::udacity-demo-1/*"
            RoleName: UdacityS3ReadOnlyEC2
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName

# IAM INSTANCE PROFILE BASED ON SERVER ROLE

    UdagramIAMProfile:
        Type: AWS::IAM::InstanceProfile
        Properties:
            Path: /
            Roles:
            - !Ref UdagramIAMRole

# SERVER SECURITY GROUPS

    UdagramServerSecGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http and ssh
            VpcId:
                Fn::ImportValue: 
                    !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: !Ref ApachePort
              ToPort: !Ref ApachePort
              CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 0
              ToPort: 65535
              CidrIp: 0.0.0.0/0

    LBSecGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http to the load balancer
            VpcId:
                Fn::ImportValue:
                    !Sub ${EnvironmentName}-VPCID
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: !Ref ApachePort
              ToPort: !Ref ApachePort
              CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 0
              ToPort: 65535
              CidrIp: 0.0.0.0/0

# SERVER LAUNCH CONFIG

    UdagramLaunchConfiguration:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties: 
            IamInstanceProfile: !Ref UdagramIAMProfile
            ImageId: !Ref AMIImage
            InstanceType: !Ref InstanceType
            LaunchConfigurationName: !Sub ${EnvironmentName} Launch Configuration
            SecurityGroups: 
                - !Ref UdagramServerSecGroup
            BlockDeviceMappings:
                - DeviceName: "/dev/sdk"
                  Ebs: 
                    VolumeSize: !Ref DiskVolume
            UserData:
                Fn::Base64: !Sub |
                    #!/bin/bash
                    apt update -y
                    apt install unzip awscli -y
                    apt install apache2 -y
                    cd /var/www/html
                    aws s3 cp s3://udacity-demo-1/udacity.zip .
                    unzip -o udacity.zip
                    systemctl start apache2.service

# AUTO SCALING GROUP and TARGET GROUP

    UdagramAutoScalingGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            LaunchConfigurationName: !Ref UdagramLaunchConfiguration
            MaxSize: !Ref GroupMaxSize
            MinSize: !Ref GroupMinSize
            TargetGroupARNs:
            - Ref: UdagramTargetGroup
            VPCZoneIdentifier:
                - Fn::ImportValue:
                        !Sub "${EnvironmentName}-PRI-NETS"

    UdagramTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties: 
            HealthCheckIntervalSeconds: 10
            HealthCheckPath: /
            HealthCheckPort: !Ref ApachePort
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 8
            HealthyThresholdCount: 2
            Port: !Ref ApachePort
            Protocol: HTTP
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
            UnhealthyThresholdCount: 5
            VpcId: 
                Fn::ImportValue: 
                    !Sub "${EnvironmentName}-VPCID"

    UdagramListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties: 
            DefaultActions: 
                - Type: forward
                  TargetGroupArn: !Ref 'UdagramTargetGroup'
            LoadBalancerArn: !Ref UdagramLoadBalancer
            Port: !Ref ApachePort
            Protocol: HTTP

    UdagramListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties: 
            Actions: 
                - Type: forward
                  TargetGroupArn: !Ref 'UdagramTargetGroup'
            Conditions: 
                - Field: path-pattern
                  Values: [/]
            ListenerArn: !Ref UdagramListener
            Priority: 1

# LOAD BALANCER

    UdagramLoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties: 
            SecurityGroups: 
            - Ref: LBSecGroup
            Subnets:
            # CHANGE TO PRIVATE SUBNETS IN PRODUCTION
            - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
            - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName

# CLOUD FRONT DISTRIBUTION

    UdagramCloudFront:
        Type: AWS::CloudFront::Distribution
        DependsOn: UdagramLoadBalancer
        Properties: 
            DistributionConfig: 
                DefaultRootObject: index.html
                Enabled: true
                PriceClass: PriceClass_100
                Origins:
                    - CustomOriginConfig: 
                        HTTPPort: !Ref ApachePort
                        OriginProtocolPolicy: http-only
                      DomainName: !GetAtt UdagramLoadBalancer.DNSName
                      Id: myCustomOrigin
                DefaultCacheBehavior:
                    CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
                    TargetOriginId: myCustomOrigin
                    ViewerProtocolPolicy: allow-all
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName

######################################################################################
#                                                                                    #
#                                      OUTPUTS                                       #
#                                                                                    #
######################################################################################

Outputs:

    InstanceRole:
            Description: The Role ID used by the instances
            Value: !GetAtt UdagramIAMRole.RoleId

    LoadBalancerDNSName:
            Description: The DNS Name of the load balancer
            Value: !GetAtt UdagramLoadBalancer.DNSName

    LoadBalancerDNSNameHTTP:
            Description: The DNS Name of the load balancer with http appended
            Value: !Sub http://${UdagramLoadBalancer.DNSName}

    CloudFrontDNSName:
            Description: The DNS Name of Cloudfront Distribution
            Value: !Sub http://${UdagramCloudFront.DomainName}